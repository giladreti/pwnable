#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

import re
from functools import reduce

COIN_WEIGHT = 10

io = connect("127.0.0.1", 9008)

def recv_regex(io: tube, regex: bytes) -> re.Match:
    return re.match(regex, io.recvline_regex(regex))

def encode_group(g: list[int]) -> str:
    return ' '.join(str(x) for x in g)

def parse_result(result: bytes) -> list[int]:
    return [int(x) for x in result.split(b"-")]

def do_round(io: tube):
    N, C = recv_regex(io, b"N=(\d+) C=(\d+)").groups()

    solve(io, int(N), int(C))

def solve(io: tube, N: int, C: int):
    query = "-".join(" ".join(str(x) for x in range(N) if x & (1 << i)) for i in range(C))

    io.sendline(query.encode())

    result = parse_result(io.recvline())

    guess = reduce(operator.or_, (1 << i for (i, x) in enumerate(result) if x % COIN_WEIGHT != 0), 0)

    io.sendline(str(guess).encode())

    assert io.recvline().startswith(b"Correct!")

io.recvline_contains(b"Ready? starting in 3 sec ...")

with log.progress('solving challenge...') as p:
    for i in range(100):
        p.status("round %i" % i)
        do_round(io)

io.recvuntil(b"Congratz! get your flag\n")

print("exploit succeeded")
print(io.recvline().decode().strip())