#/usr/bin/env python2
import copy
import os
import xmlrpclib

os.environ["PWNLIB_NOTERM"] = "1"
os.environ["PWNLIB_COLOR"] = "always"

from pwn import *

CLIENT_PORT = 9006

BLOCK_SIZE = 16
COOKIE_OFFSET = BLOCK_SIZE * 3

VERIFICATION_COUNT = 8

ADMIN = 'admin'

rpc = xmlrpclib.ServerProxy("http://localhost:9100/")

def client():
    return connect("localhost", CLIENT_PORT)

def has_two_hyphens(ticket):
    try:
        rpc.authenticate(ticket.encode("hex"))
    except xmlrpclib.Fault:
        return False

    return True

def do_auth(io, id_, password):
    io.sendline(id_)  # id
    io.recvuntil(b"Input your ID\n")

    io.sendline(password)  # password
    io.recvuntil(b"Input your PW\n")

def get_ticket(id_, password):
    io = client()

    do_auth(io, id_, password)

    io.recvuntil(b"sending encrypted data (")

    ticket = io.recvuntil(b")\n", drop=True).decode("hex")

    io.close()

    return ticket

def get_cookie_len():
    start_len = len(get_ticket(b"", b""))

    for i in range(1, 17):
        curr_len = len(get_ticket(b"", b"a" * i))

        if curr_len > start_len:
            return curr_len - 15 - 2 - i

def get_single_hyphen_ticket():
    initial_ticket = bytearray(get_ticket(b"", b"a" * (COOKIE_OFFSET - 2)))

    for i in range(1, 256):
        curr_ticket = copy.copy(initial_ticket)
        curr_ticket[2 * BLOCK_SIZE - 1] ^= i  # destroy last hyphen

        if not has_two_hyphens(bytes(curr_ticket)):
            return bytes(curr_ticket)

def test_cookie_value(i, value):
    test_ticket = bytearray(single_hyphen_ticket)
    test_ticket[i] ^= (value ^ ord("-"))

    return has_two_hyphens(bytes(test_ticket))

def verify_value(i, value):
    for j in range(VERIFICATION_COUNT):
        test_ticket = bytearray(single_hyphen_ticket)
        test_ticket[i] ^= (value ^ ord("-"))
        test_ticket[i ^ 1] ^= j

        if not has_two_hyphens(bytes(test_ticket)):
            return False

    return True

def break_index(index):
    i = COOKIE_OFFSET + index - BLOCK_SIZE

    for j in range(256):
        if test_cookie_value(i, j) and verify_value(i ,j):
            return j

    return None

# get a ticket in the format
# +---+--------------------+---+----------------------+    
# | - |      password      | x |        cookie        |    
# +---+--------------------+---+----------------------+    

single_hyphen_ticket = get_single_hyphen_ticket()

log.info("obtained a single hyphen ticket: %s", single_hyphen_ticket.encode("hex"))

cookie = bytearray()

with log.progress("breaking cookie") as p:
    for i in range(len(single_hyphen_ticket) - COOKIE_OFFSET):
        cookie.append(break_index(i))
        p.status(cookie)

cookie = bytes(cookie).rstrip(b"\x00")

password = hashlib.sha256(ADMIN + cookie).hexdigest()

log.info("broke password for %s: %s", ADMIN, password)

io = client()

do_auth(io, ADMIN, password)

io.recvuntil(b"hi admin, here is your flag\n")

log.success("flag = '{}'".format(term.text.bold_italic_yellow(io.recvline().decode().strip())))
